--- a/glib/gtimezone.c
+++ b/glib/gtimezone.c
@@ -450,7 +450,7 @@ zone_identifier_unix (void)
   const gchar *tzdir;
 
   /* Resolve the actual timezone pointed to by /etc/localtime. */
-  resolved_identifier = g_file_read_link ("/etc/localtime", &read_link_err);
+  resolved_identifier = g_file_read_link ("/opt/etc/localtime", &read_link_err);
   if (resolved_identifier == NULL)
     {
       gboolean not_a_symlink = g_error_matches (read_link_err,
@@ -480,14 +480,14 @@ zone_identifier_unix (void)
   else
     {
       /* Resolve relative path */
-      canonical_path = g_canonicalize_filename (resolved_identifier, "/etc");
+      canonical_path = g_canonicalize_filename (resolved_identifier, "/opt/etc");
       g_free (resolved_identifier);
       resolved_identifier = g_steal_pointer (&canonical_path);
     }
 
   tzdir = g_getenv ("TZDIR");
   if (tzdir == NULL)
-    tzdir = "/usr/share/zoneinfo";
+    tzdir = "/opt/share/zoneinfo";
 
   /* Strip the prefix and slashes if possible. */
   if (g_str_has_prefix (resolved_identifier, tzdir))
@@ -520,7 +520,7 @@ zone_info_unix (const gchar *identifier,
 
   tzdir = g_getenv ("TZDIR");
   if (tzdir == NULL)
-    tzdir = "/usr/share/zoneinfo";
+    tzdir = "/opt/share/zoneinfo";
 
   /* identifier can be a relative or absolute path name;
      if relative, it is interpreted starting from /usr/share/zoneinfo
@@ -541,7 +541,7 @@ zone_info_unix (const gchar *identifier,
       if (resolved_identifier == NULL)
         goto out;
 
-      filename = g_strdup ("/etc/localtime");
+      filename = g_strdup ("/opt/etc/localtime");
     }
 
   file = g_mapped_file_new (filename, FALSE, NULL);
