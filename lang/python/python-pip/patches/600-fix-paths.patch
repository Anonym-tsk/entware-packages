--- a/src/pip/_internal/utils/appdirs.py
+++ b/src/pip/_internal/utils/appdirs.py
@@ -49,4 +49,4 @@ def site_config_dirs(appname: str) -> Li
         return [dirval]
 
     # Unix-y system. Look in /etc as well.
-    return dirval.split(os.pathsep) + ["/etc"]
+    return dirval.split(os.pathsep) + ["/opt/etc"]
--- a/src/pip/_vendor/distlib/scripts.py
+++ b/src/pip/_vendor/distlib/scripts.py
@@ -56,7 +56,7 @@ def enquote_executable(executable):
         # for example /usr/bin/env "/dir with spaces/bin/jython"
         # instead of "/usr/bin/env /dir with spaces/bin/jython"
         # otherwise whole
-        if executable.startswith('/usr/bin/env '):
+        if executable.startswith('/opt/bin/env '):
             env, _executable = executable.split(' ', 1)
             if ' ' in _executable and not _executable.startswith('"'):
                 executable = '%s "%s"' % (env, _executable)
--- a/src/pip/_vendor/distro/distro.py
+++ b/src/pip/_vendor/distro/distro.py
@@ -72,8 +72,8 @@ class InfoDict(TypedDict):
     codename: str
 
 
-_UNIXCONFDIR = os.environ.get("UNIXCONFDIR", "/etc")
-_UNIXUSRLIBDIR = os.environ.get("UNIXUSRLIBDIR", "/usr/lib")
+_UNIXCONFDIR = os.environ.get("UNIXCONFDIR", "/opt/etc")
+_UNIXUSRLIBDIR = os.environ.get("UNIXUSRLIBDIR", "/opt/lib")
 _OS_RELEASE_BASENAME = "os-release"
 
 #: Translation table for normalizing the "ID" attribute defined in os-release
@@ -753,9 +753,9 @@ class LinuxDistribution:
           uses an unexpected encoding.
         """
         self.root_dir = root_dir
-        self.etc_dir = os.path.join(root_dir, "etc") if root_dir else _UNIXCONFDIR
+        self.etc_dir = os.path.join(root_dir, "opt/etc") if root_dir else _UNIXCONFDIR
         self.usr_lib_dir = (
-            os.path.join(root_dir, "usr/lib") if root_dir else _UNIXUSRLIBDIR
+            os.path.join(root_dir, "opt/lib") if root_dir else _UNIXUSRLIBDIR
         )
 
         if os_release_file:
--- a/src/pip/_vendor/platformdirs/unix.py
+++ b/src/pip/_vendor/platformdirs/unix.py
@@ -52,7 +52,7 @@ class Unix(PlatformDirsABC):
         # XDG default for $XDG_DATA_DIRS; only first, if multipath is False
         path = os.environ.get("XDG_DATA_DIRS", "")
         if not path.strip():
-            path = f"/usr/local/share{os.pathsep}/usr/share"
+            path = f"/opt/share{os.pathsep}/opt/usr/share"
         return self._with_multi_path(path)
 
     def _with_multi_path(self, path: str) -> str:
@@ -83,7 +83,7 @@ class Unix(PlatformDirsABC):
         # XDG default for $XDG_CONFIG_DIRS only first, if multipath is False
         path = os.environ.get("XDG_CONFIG_DIRS", "")
         if not path.strip():
-            path = "/etc/xdg"
+            path = "/opt/etc/xdg"
         return self._with_multi_path(path)
 
     @property
@@ -163,7 +163,7 @@ class Unix(PlatformDirsABC):
                 if not Path(path).exists():
                     path = f"/tmp/runtime-{getuid()}"  # noqa: S108
             else:
-                path = f"/run/user/{getuid()}"
+                path = f"/opt/var/run/user/{getuid()}"
         return self._append_app_name_and_version(path)
 
     @property
